name: Production

on:
    push:
        branches: [main]

jobs:
    deploy:
        environment: 
            name: Production
            url: ${{ secrets.API_URL }}
        name: Deploy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Generate .env file
              uses: skiddph/actions-env@v1.0.1
              with:
                file: .env
                prefix: ENV_
              env:
                ENV_APP_NAME: ${{ secrets.APP_NAME }}
                ENV_API_URL: ${{ secrets.API_URL }}
                ENV_CLIENT_URL: ${{ secrets.CLIENT_URL }}
                ENV_JWT_SECRET: ${{ secrets.JWT_SECRET }}
                ENV_JWT_REFRESH: ${{ secrets.JWT_REFRESH }}
                ENV_DEFAULT_DB_DSN: ${{ secrets.DEFAULT_DB_DSN }}
                ENV_DEFAULT_DB_USER: ${{ secrets.DEFAULT_DB_USER }}
                ENV_DEFAULT_DB_PASS: ${{ secrets.DEFAULT_DB_PASS }}
                ENV_SMTP_HOST: ${{ secrets.SMTP_HOST }}
                ENV_SMTP_PORT: ${{ secrets.SMTP_PORT }}
                ENV_SMTP_USER: ${{ secrets.SMTP_USER }}
                ENV_SMTP_PASS: ${{ secrets.SMTP_PASS }}
                ENV_SMTP_FROM: ${{ secrets.SMTP_FROM }}
                ENV_SMTP_FROM_NAME: ${{ secrets.SMTP_FROM_NAME }}
                ENV_SMTP_REPLY_TO: ${{ secrets.SMTP_REPLY_TO }}
                ENV_SMTP_REPLY_TO_NAME: ${{ secrets.SMTP_REPLY_TO_NAME }}
                ENV_FILE_UPLOADER_CONNECTOR: ${{ secrets.FILE_UPLOADER_CONNECTOR }}
                ENV_FILE_UPLOADER_MAX_UPLOAD_SIZE: ${{ secrets.FILE_UPLOADER_MAX_UPLOAD_SIZE }}
                ENV_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
                ENV_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
                ENV_S3_KEY: ${{ secrets.S3_KEY }}
                ENV_S3_SECRET: ${{ secrets.S3_SECRET }}
                ENV_S3_REGION: ${{ secrets.S3_REGION }}
                ENV_S3_VERSION: ${{ secrets.S3_VERSION }}
                ENV_S3_BUCKET: ${{ secrets.S3_BUCKET }}
            
            - name: Cache Composer dependencies
              uses: actions/cache@v3
              with:
                path: /tmp/composer-cache
                key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
                
            - name: Install Composer Dependencies
              uses: php-actions/composer@v6
              with:
                dev: no
                args: --profile --ignore-platform-reqs -o

            - name: Sync files
              uses: SamKirkland/FTP-Deploy-Action@4.3.0
              with:
                  protocol: ftp
                  server: ${{secrets.FTP_SERVER}}
                  username: ${{secrets.FTP_USERNAME}}
                  password: ${{secrets.FTP_PASSWORD}}
                  server-dir: api/
                  state-name: api-state.json
                  exclude: |
                    **/.git*
                    **/.git*/**
                    **/.github*
                    **/.github*/**
                    **/.vscode*
                    **/.vscode*/**
                    **/node_modules*
                    **/node_modules*/**
                    composer.json
                    composer.lock
                    LICENSE
                    README.md
                    DOCKER_ENV
                    docker_tag
                    Dockerfile-php-build
                    output.log
